reboot 重启
poweroff 关机
pidof
kill
killall

查看当前系统版本的详细信息：
cat /etc/redhat-release

查看系统负载信息
uptime

who 查看当前系统的登入信息
last 所有登录记录 但是可能被骇客修改

hostory文件在~/.bash_history中保存着

sosreport收集信息

tail 命令可以实时显示 持续刷新 使用-f参数
tr 用来替换文本文件中的字符 是字符
cat xxx | tr x x
cat xxx | tr [a-z] [A-Z] 小写变为大写

cut -d: -f1 /etc/passwd 以 : 分隔的第一列数据

mkdir p参数 递归创建目录

dd if=/dev/zero of=file count=1 bs=450M

dd if=/dev/cdrom of=xxx.iso

file 查看文件类型

进程名称与状态：
	R S D Z T

转义字符：
PRICE=5
	"\$$PRICE" $5
	"$PRICE" 5
	'$PRICE' $PRICE
	`uname -a` [输出系统的版本信息]

env变量是输出当前用户相关的环境变量

不同用户之间的环境变量是不一样的

自己创建一个变量，不具有全局性，作用范围有限，默认情况不能被其他用户使用，\
	可以使用export命令将其提升为全局变量，其他用户也可以使用


vim三种模式：命令模式 输入模式 末行模式

/etc/sysconfig/network-scripts 网卡配置信息

/etc/yum.repos.d/ yum配置目录，存放yum软件仓库的配置文件

通过路径执行脚本文件的时候，需要加上x权限

见 ~/test.sh
$0 当前shell脚本程序的名称
$# 总共几个参数（不包括脚本自己）
$* 所有位置的参数值（不包括脚本自己）
$? 上一次命令的执行返回值
$1 $2 ... 对应第n个位置的参数值

[ -d /home/feifei ] && echo yes
[ ! -d /home/feifei ] && echo yes

[ ! $USER = root ] && echo user || echo root

整数比较使用：
-eq
-ne
-gt
-lt
-le
-ge

字符串比较使用：
=
!=
-z 判断字符串是否为空 [ -z $STRING ]

-d 是否为目录类型
-e 文件是否存在
-f 是否为一般文件
-r 当前用户是否有读权限
-w 当前用户是否有写权限
-x 当前用户是否有执行权限

at 命令 设置一次性任务

crond 命令 设置周期性任务

type 命令查看一个命令是shell内嵌还是系统的命令函数

whereis 命令可以查询命令的绝对路径

crond 字段分别为 分 时 日 月 星期 命令

>>>用户身份与文件权限>>>
创建用户的时候，会自动创建一个同名的基本用户组，而且该基本用户组只有该用户一个人，\
	如果该用户以后被归纳入其他用户组，则这个其他用户组称为扩展用户组，\
	一个用户只有一个基本用户组，但是可以有多个扩展用户组，从而满足日常工作需要。

useradd -g 设置基本用户组
useradd -G 变更扩展用户组

userdel -r 删除用户时同时删除其家目录

linux文件类型：
	- 普通文件
	d 目录文件
	l 链接文件
	b 块设备文件
	c 字符设备文件
	p 管道文件
	s 套接字文件


文件的特殊权限：
	SUID：让二进制程序的执行者临时拥有属主的权限（仅对拥有执行权限的二进制程序有效） passwd命令
	只能作用在二进制程序上，不能作用在脚本上，且设置在目录上无意义。大写S表示有故障。

	SGID：可以对二进制程序和目录进行设置。

	SBIT：对某个目录设置了SBIT权限后，该目录中的文件只能被其所有者执行删除操作了。 /tmp/ 目录
	（文件能够被删除并不取决于自身的权限，而是看其所在目录是否有写入权限）
	
chown chmod均使用 -R 参数进行递归修改

文件的隐藏权限：
chattr：设置 + - 的形式进行权限的添加和删除
lsattr：查看

一般权限、特殊权限、隐藏权限都是对一类用户设置的，而ACL是对某个指定的用户进行单独设定的。
对于普通文件或目录设置ACL其实就是针对制定的用户或用户组设置文件或目录的操作权限。
对目录设置了ACL，则目录中的文件会继承其ACL。
文件设置了ACL，则文件不再继承其所在目录的ACL。
ls -l查看文件的权限信息时，最后面的点表示是否有ACL，如果变为 + 表示已经设置了ACL。

setfacl：设置ACL
getfacl：查看ACL

<<<用户身份与文件权限<<<

su命令
su - xxx： - 表示将环境变量信息也进行切换，完全切换到新的用户。

root使用visudo命令编辑sudo服务的配置文件

sudo -l 命令查看所有可以执行的命令

[谁可以使用 允许使用的主机={以谁的身份} 可执行命令的列表]
feifei	ALL=(ALL)	ALL
feifei	ALL=(ALL)	/usr/bin/cat
feifei	ALL=(ALL)	NOPASSWD:/usr/bin/cat 只能执行/usr/bin/cat命令 且不需要密码


因为根目录与开机有关，所以开机过程中仅有根目录被挂载，其他分区则是在开机完成后进行挂载，所以根目录下与开机有关的目录就不能放到不同的分区中去，例如：
/etc /bin /sbin /dev /lib

/bin 下不能有子目录
/etc 控制程序操作的本地静态文件，不能是可执行的二进制文件
/sbin 系统二进制文件，不能有子目录

FHS介绍：
https://www.jianshu.com/p/ea016c053770

udev设备管理器服务来管理系统的设备。
udev是内核用来给硬件命名的服务（守护进程）。
/dev/sdxx
/dev/sda1
主分区或扩展分区的编号从1开始，到4结束
逻辑分区从编号5开始

/dev/ 设备名称是根据内核识别顺序决定的，不是插槽顺序
/dev/sda3 数字3不能判断sda设备已经存在3个分区，只能表示为编号3的分区

文件系统：
ext3：日志文件系统
ext4：ext3改进版，能够批量分配block块，RHEL6默认
xfs：高性能的日至文件系统，RHEL7默认


mount 文件系统 挂载目录
mount /dev/sdc1 /mnt/

如果要开机挂载的话，则将挂载信息写在/etc/fstab中

添加了新的硬盘设备后，依次进行：
>分区
>格式化
>挂载

fdisk命令用于管理磁盘分区

file /dev/sda 查看文件的信息 可以查看设备文件的信息
如果内核没有自动将分区信息同步给内核，可以使用partprobe命令手动同步到内核，执行两次效果更好。
还是不行的话重启系统。

fdisk分区之后，使用mkfs.xxx命令进行格式化分区。
对于swap分区，使用mkswap命令进行格式化。

然后使用mount进行挂载。
对于swap分区，使用swapon命令进行挂载。

df命令来查看挂载状态和硬盘使用情况。

du命令可以查看一个文件、多个文件、目录占用了多大的硬盘空间。
#du -sh /*

<<<<<<
“SWAP(交换)分区是一种通过在硬盘中预先划分一定的空间,然后将把内存中暂时不常
用的数据临时存放到硬盘中,以便腾出物理内存空间让更活跃的程序服务来使用的技术,其设
计目的是为了解决真实物理内存不足的问题。但由于交换分区毕竟是通过硬盘设备读写数据的,
速度肯定要比物理内存慢,所以只有当真实的物理内存耗尽后才会调用交换分区的资源。”
>>>>>>

free命令查看系统内存使用情况。


磁盘配额quota：
有软限制和硬限制两种功能：
软限制：达到软限制的时候会提示用户，但还是允许在限定的额度内继续使用。
硬限制：达到硬限制会提示用户，且强制终止用户的操作。
软限制数值可以小于等于硬限制数值。

有硬盘空间和文件个数两种。

/etc/fstab中的 倒数第三个字段进行设置（需要重启系统）。（可以使用mount查看设置结果）

xfs_quota专门针对XFS系统的quota命令。

edquota命令编辑用户的quota配额限制。

>>>>>>
硬链接：指向原始文件的inode的指针，硬链接文件和原始文件是同一个文件，只是名字不同，
	每添加一个硬链接，该文件的inode连接数就会增加1，而且只有当文件的inode连接数为0时，
	才算彻底删除文件。
	原始文件删除了，还是能通过硬链接访问。
	不能跨分区对目录文件进行硬链接。

软链接：Windows中的快捷方式，原始文件被删除后，链接文件就会失效。

ln命令完成这件事，默认硬链接，-l参数软链接。
ln -l src new

ll命令中查看文件权限后面的. 再后面的数字就是inode的连接数。
<<<<<<


<<<chapter7 RAID AND LVM>>>
RAID5是RAID0和RAID1的折中。

RAID10 = RAID1（数据安全） + RAID0（高速读写）

mdadm用来操作RAID。
第一步：物理磁盘
第二步：先使用物理硬盘进行阵列的创建
第三步：格式化，对RAID磁盘阵列也需要格式化
第四步：mount挂载

持久化挂载也需要写入/etc/fstab文件

磁盘阵列（RAID）+备份盘

RAID5至少3块硬盘
RAID10至少4块硬盘

磁盘阵列也是需要格式化的。

一般情况下，硬盘分好区或者部署为RAID之后，再想修改硬盘分区大小就不容易了，即\
	用户想动态调整硬盘分区大小不容易（理论上可行）。所以就有了LVM（逻辑卷管理器）技术，\
	LVM在硬盘分区和文件系统之间添加了一个逻辑层，提供一个抽象的卷组，可以把\
	多块硬盘进行卷组合并。

LVM中有几个概念：物理卷（pvxxx簇命令） 卷组（vgxxx簇命令） 逻辑卷（lvxxx簇命令） 基本单元

1）对硬盘进行创建物理卷操作 pvxxx
	（可以理解为让硬盘支持LVM技术或将硬盘设备加入到LVM技术可用的硬件资源池中）
2）对上面的硬盘进行卷组合并，卷组名称用户自定义（假如为fei，后续使用） vgxxx
3）切割出逻辑卷设备（大小可以自定义 也可以是基本单元的整数倍的大小） lvxxx
4）将切割出来的逻辑卷设备格式化并挂载（切割出来的逻辑卷也有名字，假如为he，后续使用）
	linux系统会把LVM中的逻辑卷设备存在在/dev下（实际为符号链接）\
	命名规则：/dev/卷组名称/逻辑卷名称（/dev/fei/he）\
	格式化：mkfs.ext4 /dev/fei/he \
	挂载：mount

5）写入/etc/fstab永久生效
















